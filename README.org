* Tom and the Toothfairies
[[https://github.com/syl20bnr/spacemacs][https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg]] [[https://circleci.com/gh/tom-and-the-toothfairies/pathways][https://img.shields.io/circleci/project/github/tom-and-the-toothfairies/pathways.svg]]
** Installation
This project includes a Docker Compose file for easy installation and testing.
Installation instructions for Docker on your platform can be found [[https://www.docker.com/community-edition#/download][here]].

For Docker installations on Ubuntu ~sudo~ is required to run Docker and Docker
Compose commands. You will also need to install ~docker-compose~ separately with
#+BEGIN_SRC bash
$ sudo curl -o /usr/local/bin/docker-compose -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m`
$ sudo chmod +x /usr/local/bin/docker-compose
#+END_SRC
*** The Happy Path
If you do not wish to build the Docker containers yourself you can run it
directly from the Docker registry. First, install the necessary Docker
components for your operating system as outlined above.

Then you can run the latest release from [[https://hub.docker.com/u/tomtoothfairies/][Docker Hub]]
#+BEGIN_SRC bash
$ docker-compose up -d
#+END_SRC
You will then be able to access the web interface at ~http://localhost:4000~\\
You can stop the Docker containers with:
#+BEGIN_SRC bash
$ docker-compose down
#+END_SRC

To run a release other than the current you may manually checkout the release
tag and run ~docker-compose~
#+BEGIN_SRC bash
$ git checkout 0.3
$ docker-compose up -d
#+END_SRC

*** Building Manually
There are DNS problems when running containers in *Ubuntu* within the *TCD
network*. This can be resolved while on the TCD network by editing the Docker
DNS config.
#+BEGIN_SRC bash
$ echo "{\"dns\": [\"134.226.251.200\", \"134.226.251.100\"]}" | sudo tee -a /etc/docker/daemon.json
$ sudo service docker restart
#+END_SRC
You should revert these settings when leaving the TCD network by running
#+BEGIN_SRC bash
$ sudo rm /etc/docker/daemon.json
$ sudo service docker restart
#+END_SRC

1) Clone the Repo
   #+BEGIN_SRC bash
   $ git clone https://github.com/tom-and-the-toothfairies/pathways.git
   #+END_SRC
2) Build with Docker
   #+BEGIN_SRC bash
   $ cd pathways
   $ docker build -t tomtoothfairies/asclepius asclepius
   $ docker build -t tomtoothfairies/panacea panacea
   $ docker built -t tomtoothfairies/chiron chiron
   #+END_SRC
3) Run the tests
   #+BEGIN_SRC bash
   $ docker run -t -e "MIX_ENV=test" tomtoothfairies/panacea mix test
   $ docker run -t tomtoothfairies/asclepius pytest
   #+END_SRC

** Features
The feature list for the project can be found [[./FEATURES.md][here]].
** Change Log
The project's change log can be found [[./CHANGELOG.md][here]]
** Architecture Overview
The system is split into three distinct services, Pancea, Asclepius and Chiron.
They each run inside a docker container. The containers can be easily managed
using ~docker-compose~ as mentioned earlier.
*** Panacea
Panacea is responsible for the UI and PML analysis. It is a web application that
serves the UI and exposes an API for uploading PML files for analysis.

More information about Panacea can be found [[./panacea/README.md][here]].
*** Chiron
Chiron houses the DINTO data. The data is compiled into a triple store, Chiron
exposes a HTTP API for querying the triple store.

More information about Chiron can be found [[./chiron/REAME.md][here]].
*** Asclepius
Asclepius acts as an intermediary between Panacea and Chiron. It accepts
requests to identify DDIs from Panacea, creates the necessary SPARQL query and
passes it on to Chiron.

More information about Asclepius can be found [[./asclepius/README.org][here]].
